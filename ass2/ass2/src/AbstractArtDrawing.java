//207270521 Denis Mogilevsky
import biuoop.GUI;
import biuoop.DrawSurface;
import java.util.Random;
import java.awt.Color;

/**
 * @author Denis Mogilevsky.
 * creates a drawing with 10 lines.
 * blue dot - middle of line.
 * red dot - intersection between lines.
 */
public class AbstractArtDrawing {
    /**
     * @return a random line generated by the method.
     */
    public static Line generateRandomLine() {
        Random rand = new Random();
         return new Line(rand.nextInt(1600) + 1, rand.nextInt(900) + 1,
                rand.nextInt(1600) + 1, rand.nextInt(900) + 1);
    }

    /**
     * fills an array with random lines.
     * @param lineArray array to be changed.
     */
    public static void lineArrayGenerator(Line[] lineArray) {
        for (int index = 0; index < lineArray.length; index++) {
            lineArray[index] = generateRandomLine();
        }
    }

    /**
     * draws a line and its middle point.
     * @param line line to be drawn.
     * @param dSurface drawing surface, instance of GUI.
     */
    public static void drawLine(Line line, DrawSurface dSurface) {
        dSurface.setColor(Color.BLACK);
        dSurface.drawLine((int) line.getStart().getX(), (int) line.getStart().getY(),
                (int) line.getEnd().getX(), (int) line.getEnd().getY());
        dSurface.setColor(Color.blue);
        dSurface.fillCircle((int) (line.middle().getX()), (int) line.middle().getY(), 3);
    }

    /**
     *
     * @param lineArray array of lines to be drawn.
     * @param drawSurface drawing surface.
     */
    public static void drawEverything(Line[] lineArray, DrawSurface drawSurface) {
        drawSurface.setColor(Color.black);
        for (int index = 0; index < lineArray.length; index++) {
            drawLine(lineArray[index], drawSurface);  //draws the line
            for (int comparedIndex = index + 1; comparedIndex < lineArray.length; comparedIndex++) {
                Point intersection = lineArray[index].intersectionWith(lineArray[comparedIndex]);
                if (intersection != null) {  //draws the intersection
                    drawSurface.setColor(Color.red);
                    drawSurface.fillCircle((int) intersection.getX(), (int) intersection.getY(), 3);
                    drawSurface.setColor(Color.black);
                }
            }
        }
    }

    /**
     * Main.
     * @param args meaningless.
     */
    public static void main(String[] args) {
        GUI gui = new GUI("Randomly generated lines", 1600, 900);
        DrawSurface drawSurface = gui.getDrawSurface();
        int lineNumber = 10;
        Line[] lineArray = new Line[lineNumber];
        lineArrayGenerator(lineArray);
        AbstractArtDrawing.drawEverything(lineArray, drawSurface);
        gui.show(drawSurface);
    }
}
